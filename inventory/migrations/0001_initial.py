# Generated by Django 5.2.5 on 2025-10-28 19:43

import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(max_length=64)),
                ('target_model', models.CharField(blank=True, max_length=64)),
                ('target_id', models.PositiveIntegerField(blank=True, null=True)),
                ('context', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Barcode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=64, unique=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('label_type', models.CharField(choices=[('EAN13', 'EAN13'), ('QR', 'QR'), ('CODE128', 'Code 128')], default='EAN13', max_length=16)),
            ],
            options={
                'ordering': ['product', '-is_primary'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CreditAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_type', models.CharField(choices=[('customer', 'Customer'), ('supplier', 'Supplier'), ('mechanic', 'Mechanic')], max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('balance_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('balance_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('credit_limit_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('credit_limit_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('due_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CreditEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('direction', models.CharField(choices=[('debit', 'Debit'), ('credit', 'Credit')], max_length=10)),
                ('amount_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('amount_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('is_settled', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=120)),
                ('last_name', models.CharField(blank=True, max_length=120)),
                ('phone', models.CharField(max_length=24, unique=True)),
                ('notes', models.TextField(blank=True)),
                ('loyalty_points', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('effective_date', models.DateField(default=django.utils.timezone.now, unique=True)),
                ('usd_to_uzs', models.DecimalField(decimal_places=4, max_digits=12)),
                ('source', models.CharField(blank=True, max_length=120)),
            ],
            options={
                'ordering': ['-effective_date'],
            },
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount_uzs', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('amount_usd', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payment_type', models.CharField(choices=[('cash', 'Cash'), ('transfer', 'Bank transfer'), ('card', 'Card'), ('other', 'Other')], max_length=16)),
                ('incurred_on', models.DateField(default=django.utils.timezone.now)),
                ('paid_to', models.CharField(blank=True, max_length=255)),
                ('note', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['-incurred_on'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('color', models.CharField(default='#2c3e50', max_length=7)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('check_number', models.CharField(default='', max_length=32, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('scheduled_date', models.DateField(default=django.utils.timezone.now)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCheckLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expected_quantity', models.PositiveIntegerField(help_text='System recorded quantity')),
                ('actual_quantity', models.PositiveIntegerField(help_text='Physical count quantity')),
                ('difference', models.IntegerField(default=0, help_text='Actual - Expected (positive=surplus, negative=shortage)')),
                ('notes', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['inventory_check', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entry_type', models.CharField(choices=[('earn', 'Earn'), ('redeem', 'Redeem')], max_length=10)),
                ('points', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notify_sms', models.BooleanField(default=False)),
                ('notify_telegram', models.BooleanField(default=False)),
                ('telegram_chat_id', models.CharField(blank=True, max_length=64)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OfflineSaleBuffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device_id', models.CharField(max_length=64)),
                ('payload', models.JSONField()),
                ('synced', models.BooleanField(default=False)),
                ('synced_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity_requested', models.PositiveIntegerField()),
                ('quantity_received', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('ordered', 'Ordered'), ('received', 'Received'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('expected_date', models.DateField(blank=True, null=True)),
                ('ordered_at', models.DateTimeField(blank=True, null=True)),
                ('received_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentGatewayTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.CharField(choices=[('payme', 'Payme'), ('click', 'Click'), ('uzcard', 'UZCARD'), ('humo', 'HUMO')], max_length=16)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed')], default='pending', max_length=16)),
                ('external_id', models.CharField(blank=True, max_length=120)),
                ('amount_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('response_payload', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=100, unique=True)),
                ('oem_number', models.CharField(blank=True, max_length=150)),
                ('price_usd', models.DecimalField(decimal_places=2, max_digits=12)),
                ('price_uzs', models.DecimalField(decimal_places=2, max_digits=18)),
                ('usd_to_uzs_rate', models.DecimalField(decimal_places=4, help_text='Exchange rate used for conversion', max_digits=12)),
                ('is_split', models.BooleanField(default=False, help_text='Has been split into parts')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price_usd', models.DecimalField(decimal_places=2, max_digits=12)),
                ('price_uzs', models.DecimalField(decimal_places=2, max_digits=18)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sale_number', models.CharField(default='', max_length=32, unique=True)),
                ('discount_type', models.CharField(choices=[('percent', 'Percent'), ('amount', 'Amount'), ('none', 'No discount')], default='none', max_length=10)),
                ('discount_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('subtotal_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('subtotal_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('total_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_paid_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('total_paid_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('change_due_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('change_due_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('open', 'Open'), ('partial', 'Partially paid'), ('paid', 'Fully paid'), ('refunded', 'Refunded')], default='draft', max_length=12)),
                ('is_credit_sale', models.BooleanField(default=False)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('note', models.TextField(blank=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price_uzs', models.DecimalField(decimal_places=2, max_digits=18)),
                ('unit_price_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('discount_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('discount_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('line_total_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('line_total_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
            ],
            options={
                'ordering': ['sale', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='SalePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('method', models.CharField(choices=[('cash', 'Cash'), ('terminal', 'POS terminal'), ('p2p', 'P2P'), ('bank', 'Bank card'), ('other', 'Other')], max_length=12)),
                ('amount_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('amount_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('currency', models.CharField(choices=[('UZS', 'UZS'), ('USD', 'USD')], default='UZS', max_length=3)),
                ('paid_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('reference', models.CharField(blank=True, max_length=120)),
                ('is_change', models.BooleanField(default=False, help_text='Marks change returned to customer')),
            ],
            options={
                'ordering': ['paid_at'],
            },
        ),
        migrations.CreateModel(
            name='SaleReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('return_number', models.CharField(default='', max_length=32, unique=True)),
                ('reason', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('approved', 'Approved'), ('completed', 'Completed')], default='draft', max_length=12)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('total_refunded_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('total_refunded_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SaleReturnItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField()),
                ('refund_amount_uzs', models.DecimalField(decimal_places=2, max_digits=18)),
                ('refund_amount_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
            ],
            options={
                'ordering': ['sale_return', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCatalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120, unique=True)),
                ('default_price_uzs', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('default_price_usd', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('default_duration_minutes', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(default='', max_length=32, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('in_progress', 'In progress'), ('completed', 'Completed'), ('invoiced', 'Invoiced')], default='draft', max_length=15)),
                ('opened_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('is_complimentary', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True)),
                ('total_uzs', models.DecimalField(decimal_places=2, default=0, max_digits=18)),
                ('total_usd', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
            ],
            options={
                'ordering': ['-opened_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceOrderLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price_uzs', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=18)),
                ('price_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('is_free', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('low_stock_threshold', models.PositiveIntegerField(default=10, help_text='Alert when stock falls below this level')),
                ('reorder_quantity', models.PositiveIntegerField(default=50, help_text='Suggested reorder quantity')),
            ],
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('movement_type', models.CharField(choices=[('in', 'Inbound'), ('out', 'Outbound'), ('transfer', 'Transfer'), ('loss', 'Loss / Write-off')], max_length=20)),
                ('quantity', models.PositiveIntegerField()),
                ('note', models.CharField(blank=True, max_length=255)),
                ('processed_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('phone', models.CharField(blank=True, max_length=24)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plate_number', models.CharField(max_length=15)),
                ('make', models.CharField(blank=True, max_length=80)),
                ('model', models.CharField(blank=True, max_length=80)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('vin', models.CharField(blank=True, max_length=64)),
            ],
            options={
                'ordering': ['plate_number'],
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('location', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
